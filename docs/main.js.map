{"version":3,"file":"main.js","mappings":"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","sources":["./src/app/_services/apex-contractual.service.ts","./src/app/app-routing.module.ts","./src/app/app.component.ts","./src/app/app.component.html","./src/app/app.module.ts","./src/app/calculate/calculate.component.ts","./src/app/calculate/calculate.component.html","./src/app/employee-master.component.ts","./src/app/employee-master.component.html","./src/app/entries/entries.component.ts","./src/app/entries/entries.component.html","./src/app/environments/environment.ts","./src/app/manage-entries/manage-entries.component.ts","./src/app/manage-entries/manage-entries.component.html","./src/app/nav/nav.component.ts","./src/app/nav/nav.component.html","./src/app/price-master/price/price.component.html","./src/app/price-master/price/price.component.ts","./src/app/product-master/product-master.component.ts","./src/app/product-master/product-master.component.html","./src/app/search/search.component.ts","./src/app/search/search.component.html","./src/main.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\nimport { AngularFirestore, AngularFirestoreModule } from '@angular/fire/compat/firestore';\nimport { Observable, of } from 'rxjs';\nimport { Product } from '../_model/product';\nimport { Entry } from '../_model/entry';\nimport { Employee } from '../_model/employee';\nimport { Price } from '../_model/price';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class ApexContractualService {\n  constructor(private afs: AngularFirestore) {}\n\n  addEmployee(employeeName: any, priceCategory: any, defintion: any) {\n    return this.afs.collection('employees').add({\n      employeeName: employeeName,\n      priceCategory: priceCategory,\n      defintion: defintion,\n    });\n  }\n\n  getEmployees() {\n    return this.afs\n      .collection<Employee>('employees', (ref) => ref.orderBy('employeeName'))\n      .snapshotChanges();\n  }\n\n  editEmployee(employeeId: string | undefined, employeeName: any, priceCategory: any, definition: any) {\n    return this.afs.collection('employees').doc(employeeId).ref.update({\n      employeeName: employeeName,\n      priceCategory: priceCategory,\n      definition: definition\n    });\n  }\n\n  deleteEmployee(employeeId: string | undefined) {\n    return this.afs.collection('employees').doc(employeeId).ref.delete();\n  }\n\n  getEmployee(id: string | undefined) {\n    return this.afs.collection('employees').doc(id).ref.get();\n  }\n\n  editProduct(productId: string | undefined, productName: any, definition: any) {\n    return this.afs.collection('products').doc(productId).ref.update({\n      productName: productName,\n      definition: definition\n    });\n  }\n\n  addNewProduct(productName: any, size: any, definition: any) {\n    return this.afs.collection('products').add({\n      productName: productName,\n      size: size,\n      definition: definition,\n    });\n  }\n\n  deleteProduct(productId: string | undefined) {\n    return this.afs.collection('products').doc(productId).ref.delete();\n  }\n\n  getPrices(event: undefined) {\n    console.log(event);\n    return this.afs\n      .collection<Price>('prices')\n      .snapshotChanges();\n  }\n\n  getPriceByCat(prodId: any, cat: any) {\n    return this.afs\n    .collection('prices', (ref) => ref\n    .where('productId', '==', prodId)\n    )\n      .get();\n  }\n\n  editPrice(priceId: string | undefined, price: any, price2: any) {\n    return this.afs.collection('prices').doc(priceId).ref.update({\n      price: price,\n      price2: price2\n    });\n  }\n\n  deletePrice(priceId: string | undefined) {\n    console.log(priceId);\n    return this.afs.collection('prices').doc(priceId).ref.delete();\n  }\n\n  addNewPrice(productId: any, price: any, price2: any, price3: any, comments: any) {\n    return this.afs.collection('prices').add({\n      productId: productId,\n      price: price,\n      price2: price2,\n      price3: price3,\n      comments: comments\n    });\n  }\n\n  getProducts() {\n    return this.afs\n      .collection<Product>('products', (ref) => ref.orderBy('productName'))\n      .snapshotChanges();\n  }\n  \n  getProducts1() {\n    return this.afs.collection('products').get();\n  }\n\n  getProduct(id: string | undefined) {\n    return this.afs.collection('products').doc(id).ref.get();\n  }\n\n  addNewEntry(quantity: any, productId: any, employeeId: any, dateAdded: any, definition: any) {\n    return this.afs.collection('entries').add({\n      productId: productId,\n      employeeId: employeeId,\n      quantity: quantity,\n      dateAdded: dateAdded,\n      definition: definition,\n    });\n  }\n\n  getProductById(id: string | undefined) {\n    return this.afs.collection('products').doc(id).ref.get();\n  }\n\n  getEmployeeById(id: string | undefined) {\n    console.log(id)\n    return this.afs.collection('employees').doc(id).ref.get();\n  }\n\n  getEntries() {\n    return this.afs.collection('entries').snapshotChanges();\n  }\n\n  getEntriesGet() {\n    return this.afs.collection<Entry>('entries').get();\n  }\n\n  editEntry(entryId: string | undefined, productId: any, employeeId: any,definition: any, quantity: any, dateAdded: any) {\n    return this.afs.collection('entries').doc(entryId).ref.update({\n      productId: productId,\n      employeeId: employeeId,\n      definition: definition,\n      quantity: quantity,\n      dateAdded: dateAdded,\n    });\n  }\n\n  getEntriesCalc(employeeId: any) {\n    return this.afs\n      .collection('entries', (ref) => ref\n      .where('employeeId', '==', employeeId))\n      .get();\n  }\n\n  getPricesCalc(procuctId: any) {\n    return this.afs\n      .collection('prices', (ref) => ref\n      .where('productId', '==', procuctId)\n      )\n      .get();\n  }\n\n  getEmployeePriceCat(employeeId: string)\n {\nreturn this.afs.collection('employees').doc(employeeId).ref.get();\n }\n\n  getEntry(id: string | undefined) {\n    return this.afs.collection('entries').doc(id).ref.get();\n  }\n\n  deleteEntry(entryId: string | undefined) {\n    return this.afs.collection('entries').doc(entryId).ref.delete();\n  }\n\n  GetAssets(): Observable<any[]> {\n    let assets: any[] = [\n      {\n        assetId: 1,\n        assetName: 'Item A',\n        cpuName: 'CPU A',\n        hddName: 'HDD A',\n      },\n      {\n        assetId: 2,\n        assetName: 'Item B',\n        cpuName: 'CPU B',\n        hddName: 'HDD B',\n      },\n      {\n        assetId: 3,\n        assetName: 'Item C',\n        cpuName: 'CPU C',\n        hddName: 'HDD C',\n      },\n    ];\n\n    return of(assets);\n  }\n}\n","import { NgModule } from '@angular/core';\nimport { RouterModule, Routes } from '@angular/router';\nimport { CalculateComponent } from './calculate/calculate.component';\nimport { EmployeeMasterComponent } from './employee-master.component';\nimport { EntriesComponent } from './entries/entries.component';\nimport { PriceComponent } from './price-master/price/price.component';\nimport { ProductMasterComponent } from './product-master/product-master.component';\nimport { SearchComponent } from './search/search.component';\n\nconst routes: Routes = [\n    { path: 'employee-master', component: EmployeeMasterComponent },\n    { path: 'product-master', component: ProductMasterComponent },\n    { path: 'entries', component: EntriesComponent },\n    { path: 'search', component: SearchComponent },\n    { path: 'price', component: PriceComponent },\n    { path: 'calculate', component: CalculateComponent },\n];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { }\n","import { Component } from '@angular/core';\n\n\n\n// For Firebase JS SDK v7.20.0 and later, measurementId is optional\nconst firebaseConfig = {\n  apiKey: \"AIzaSyDod4I8TQ_3FX7ScbIkVxkzuJJtxwOP5Mw\",\n  authDomain: \"contractual-e220f.firebaseapp.com\",\n  projectId: \"contractual-e220f\",\n  storageBucket: \"contractual-e220f.appspot.com\",\n  messagingSenderId: \"506601902944\",\n  appId: \"1:506601902944:web:24d06b93b9ef8281178405\",\n  measurementId: \"G-PBB05C5SEW\"\n};\n\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent {\n  title = 'contratual';\n\n}\n","\n<app-nav></app-nav>\n<router-outlet>\n</router-outlet>\n","import { NgModule } from '@angular/core';\nimport { BrowserModule } from '@angular/platform-browser';\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\nimport { AppRoutingModule } from './app-routing.module';\nimport { AppComponent } from './app.component';\nimport { CalculateComponent } from './calculate/calculate.component';\nimport { EmployeeMasterComponent } from './employee-master.component';\nimport { EntriesComponent } from './entries/entries.component';\nimport { PriceComponent } from './price-master/price/price.component';\nimport { ProductMasterComponent } from './product-master/product-master.component';\nimport { SearchComponent } from './search/search.component';\nimport { ManageEntriesComponent } from './manage-entries/manage-entries.component';\nimport { NavComponent } from './nav/nav.component';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { MatCardModule } from '@angular/material/card';\nimport { MatTableModule } from '@angular/material/table';\nimport { MatSortModule } from '@angular/material/sort';\nimport { AngularFirestore, AngularFirestoreModule } from '@angular/fire/compat/firestore';\nimport { ApexContractualService } from './_services/apex-contractual.service';\nimport { AngularFireModule } from '@angular/fire/compat';\nimport { environment } from './environments/environment';\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    CalculateComponent,\n    EmployeeMasterComponent,\n    EntriesComponent,\n    PriceComponent,\n    ProductMasterComponent,\n    SearchComponent,\n    ManageEntriesComponent,\n    NavComponent,\n  ],\n  imports: [\n    BrowserAnimationsModule,\n    BrowserModule,\n    AppRoutingModule,\n    FormsModule,\n    ReactiveFormsModule,\n    MatCardModule,\n    MatTableModule,\n    MatSortModule,\n    AngularFireModule.initializeApp(environment.firebase),\n    AngularFirestoreModule,\n  ],\n  providers: [\n    AngularFirestore,\n    ApexContractualService,\n  ],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","import { formatDate } from '@angular/common';\nimport { Component, ViewChild, OnInit } from '@angular/core';\nimport { FormGroup, FormBuilder } from '@angular/forms';\nimport { MatSort } from '@angular/material/sort';\nimport { MatTableDataSource } from '@angular/material/table';\nimport { Employee } from '../_model/employee';\nimport { Price } from '../_model/price';\nimport { ApexContractualService } from '../_services/apex-contractual.service';\nimport { QuerySnapshot } from '@angular/fire/compat/firestore';\nimport { EntryData } from '../entry-data';\n\n@Component({\n  selector: 'app-calculate',\n  templateUrl: './calculate.component.html',\n  styleUrls: ['./calculate.component.css']\n})\nexport class CalculateComponent implements OnInit {\n  @ViewChild(MatSort) matSort!: MatSort;\n\n  displayedColumns: string[] = ['date', 'productName', 'quantity', 'rate', 'rowTotal'];\n  priceCategory: any;\n  success = false;\n  entries: any[] = [];\n  dataSource!: MatTableDataSource<any>;\n  employees: Employee[] = [];\n  sorted: any[] = [];\n  fg!: FormGroup;\n  finalPrices: Price[] = [];\n  thisMonth!: string | number;\n  thisYear!: string;\n  totalCalc = 0;\n  prices: Price[] = [];\n  finalData: any[] = [];\n  finalEntries: any;\n  dataAvailable = false;\n\n  constructor(\n    private contService: ApexContractualService,\n    private fb: FormBuilder\n  ) {}\n\n  ngOnInit(): void {\n    this.getEmployees();\n    this.initializeFormGroup();\n  }\n\n  initializeFormGroup(): void {\n    const today = new Date();\n    const format = 'dd/MM/yyyy';\n    const locale = 'en-US';\n\n    this.thisMonth = ('0' + (today.getMonth() + 1)).toString().slice(-2);\n    this.thisYear = today.getFullYear().toString();\n\n    this.fg = this.fb.group({\n      selectedMonth: [this.thisMonth],\n      selectedYear: [this.thisYear],\n      employeeId: [''],\n      consolidated: ['']\n    });\n  }\n\n  getEmployees(): void {\n    this.employees = [];\n    this.contService.getEmployees().subscribe((arg) => {\n      this.employees = arg.map((res) => ({\n        employeeName: res.payload.doc.data().employeeName,\n        data: res.payload.doc.data(),\n        docId: res.payload.doc.id,\n        definition: res.payload.doc.data().definition\n      }));\n    });\n  }\n\n  getPrices(empId?: undefined): void {\n    this.prices = [];\n    this.finalPrices = [];\n    \n    this.contService.getPrices(empId).subscribe((arg: any[]) => {\n      arg.forEach((res: { payload: { doc: { data: () => any; id: any; }; }; }) => {\n        this.finalPrices.push({\n          employeeId: res.payload.doc.data().employeeId,\n          productId: res.payload.doc.data().productId,\n          price: res.payload.doc.data().price,\n          price2: res.payload.doc.data().price2,\n          price3: res.payload.doc.data().price3,\n          comments: res.payload.doc.data().comments,\n        });\n      });\n      this.createFinalData();\n    });\n  }\n\n // ...\n\ngetEntries(): void {\n  this.entries = [];\n  this.finalEntries = [];\n  this.finalData = [];\n  this.totalCalc = 0;\n  let dateFromDB;\n\n  const selectedMonth = this.fg.get('selectedMonth')?.value;\n  const selectedYear = this.fg.get('selectedYear')?.value;\n  const employeeId = this.fg.get('employeeId')?.value;\n\n  if (!selectedMonth || !selectedYear || !employeeId) {\n    console.error(\"selectedMonth, selectedYear, or employeeId is null\");\n    return;\n  }\n\n  const selectedYearMonth = `${selectedMonth}/${selectedYear}`;\n\n  this.contService.getEmployeePriceCat(employeeId).then((arg1: any) => {\n    if (arg1 && arg1.data && typeof arg1.data === 'function') {\n      const priceCategory = arg1.data().priceCategory as number;\n      this.priceCategory.push(priceCategory);\n      this.contService.getEntriesCalc(employeeId).subscribe((querySnapshot) => {\n        const arg: EntryData[] = [];\n        querySnapshot.forEach((res: any) => {\n          arg.push(res.data());\n        });\n\n        arg.forEach((res) => {\n          dateFromDB = res.dateAdded.substring(3, 10);\n          if (dateFromDB === selectedYearMonth) {\n            this.finalEntries.push(res);\n          }\n        });\n\n        this.createArray(this.finalEntries, priceCategory);\n      });\n    } else {\n      console.error(\"arg1 or arg1.data() is null\");\n    }\n  });\n}\n\n// ...\n\n  createConsolidatedArray(entriesArray: any[], priceCategory: number): void {\n    // ... (remaining code)\n  }\n\n  createArray(entriesArray: any[], priceCategory: number): void {\n    // ... (remaining code)\n  }\n\n  createFinalData(): void {\n    console.log(this.dataSource);\n  }\n}\n","<div\n    class=\"container\"\n  >\n    <div class=\"heading\">Choose date and employee</div>\n\n    <form\n      name=\"productForm\"\n      [formGroup]=\"fg\"\n      class=\"form-inline mt-2 mt-md-0\"\n      (ngSubmit)=\"getEntries()\"\n    >\n\n      <mat-card>\n        <select\n        style=\"padding: 3px;\"\n        formControlName=\"selectedMonth\"\n      >\n        <option value=\"01\">January</option>\n        <option value=\"02\">February</option>\n        <option value=\"03\">March</option>\n        <option value=\"04\">April</option>\n        <option value=\"05\">May</option>\n        <option value=\"06\">June</option>\n        <option value=\"07\">July</option>\n        <option value=\"08\">August</option>\n        <option value=\"09\">September</option>\n        <option value=\"10\">October</option>\n        <option value=\"11\">November</option>\n        <option value=\"12\">December</option>\n      </select>\n      &nbsp;\n      &nbsp;\n      <select\n        style=\"padding: 3px; \"\n        formControlName=\"selectedYear\"\n      >\n        <option value=\"2022\">2022</option>\n        <option value=\"2023\">2023</option>\n        <option value=\"2024\">2024</option>\n        <option value=\"2025\">2025</option>\n        <option value=\"2026\">2026</option>\n        <option value=\"2027\">2027</option>\n        <option value=\"2028\">2028</option>\n        <option value=\"2029\">2029</option>\n        <option value=\"2030\">2030</option>\n        <option value=\"2031\">2031</option>\n        <option value=\"2032\">2032</option>\n        <option value=\"2033\">2033</option>\n        <option value=\"2034\">2034</option>\n        <option value=\"2035\">2035</option>\n        <option value=\"2036\">2036</option>\n        <option value=\"2037\">2037</option>\n        <option value=\"2038\">2038</option>\n      </select>\n\n      <select style=\"padding: 3px; margin-top: 8px; \"  formControlName=\"employeeId\" class=\"form-select\">\n        <option [selected]=\"true\">Select employee</option>\n        <option *ngFor=\"let employee of employees\" value=\"{{ employee.docId }}\">\n          {{ employee.data.employeeName }}\n        </option>\n      </select>\n        <mat-card-actions>\n          <button mat-raised-button type=\"submit\" style=\"margin-left: 8px; \" color=\"warn\" >Get records</button>\n        </mat-card-actions>\n      </mat-card>\n    </form>\n<br />\n<div class=\"container\" style=\"align-content: center;\"  >\n<table mat-table matSort class=\"mat-elevation-z8\" [dataSource]=\"dataSource\" style=\"width: 100%;\" >\n  <ng-container matColumnDef=\"date\">\n    <th mat-header-cell *matHeaderCellDef mat-sort-header>Date</th>\n    <td mat-cell *matCellDef=\"let finalData\">{{ finalData.date }}</td>\n  </ng-container>\n  <ng-container matColumnDef=\"productName\">\n    <th mat-header-cell *matHeaderCellDef mat-sort-header>Product</th>\n    <td mat-cell *matCellDef=\"let finalData\">{{ finalData.productName }}</td>\n  </ng-container>\n  <ng-container matColumnDef=\"quantity\">\n    <th mat-header-cell *matHeaderCellDef mat-sort-header>Quantity</th>\n    <td mat-cell *matCellDef=\"let finalData\">{{ finalData.quantity }}</td>\n  </ng-container>\n  <ng-container matColumnDef=\"rate\">\n    <th mat-header-cell *matHeaderCellDef mat-sort-header>Rate</th>\n    <td mat-cell *matCellDef=\"let finalData\">{{ finalData.rate }}</td>\n  </ng-container>\n  <ng-container matColumnDef=\"rowTotal\">\n    <th mat-header-cell *matHeaderCellDef mat-sort-header>Row Total</th>\n    <td mat-cell *matCellDef=\"let finalData\">{{ finalData.rowTotal | number }}</td>\n  </ng-container>\n  <tr mat-header-row *matHeaderRowDef=\"displayedColumns\"></tr>\n  <tr mat-row *matRowDef=\"let finalData; columns: displayedColumns\"></tr>\n</table>\n<mat-card  style=\"background-color: rgb(250, 226, 119);\">\n<mat-card-actions>\n  <b> Total: {{ totalCalc | number }}</b>\n</mat-card-actions>\n</mat-card>\n\n</div>\n</div>\n","import { Component, OnInit, ViewChild } from '@angular/core';\nimport { FormGroup, FormBuilder, Validators } from '@angular/forms';\nimport { MatSort } from '@angular/material/sort';\nimport { ApexContractualService } from \"./_services/apex-contractual.service\";\nimport { Employee } from './_model/employee';\n\n@Component({\n  selector: 'app-employee-master',\n  templateUrl: './employee-master.component.html',\n  styleUrls: ['./employee-master.component.css']\n})\nexport class EmployeeMasterComponent implements OnInit {\n  @ViewChild(MatSort) sort!: MatSort;\n\n  success= false;\n  employees: Employee[] = [];\n  sorted = [];\n  fg!: FormGroup;\n  fEdit!: FormGroup;\n  editSuccess = false;\n  editEmployeeForm = false;\n  deleteSuccess = false;\n\n  constructor(\n    private contService: ApexContractualService, private fb: FormBuilder\n  ) { }\n\n  ngOnInit(): void {\n    this.getEmployees();\n\n    this.fg = this.fb.group({\n      // Your form controls here\n      employeeName: ['', Validators.required],\n      priceCategory: ['', Validators.required],\n      definition: [''],\n    });\n  }\n\n  addNewEmployee() {\n    const employeeNameControl = this.fg.get(\"employeeName\");\n    const definitionControl = this.fg.get(\"definition\");\n    const priceCategoryControl = this.fg.get(\"priceCategory\");\n  \n    // Check if controls are not null\n    if (employeeNameControl && definitionControl && priceCategoryControl) {\n      const employeeName = employeeNameControl.value;\n      const definition = definitionControl.value;\n      const priceCategory = priceCategoryControl.value;\n  \n      this.contService.addEmployee(employeeName, priceCategory, definition).then((res: any) => {\n        this.success = true;\n      });\n    }\n  }\n  \n\n  preEditEmployee(employeeId: any, employeeName: any, priceCategory: any, oldDef: any) {\n    this.fEdit = this.fb.group({\n      employeeId: employeeId,\n      employeeName: employeeName,\n      definition: oldDef,\n      priceCategory: priceCategory\n    });\n    this.editEmployeeForm = true;\n  }\n\n  editEmployee() {\n    const employeeIdControl = this.fEdit.get('employeeId');\n    const employeeNameControl = this.fEdit.get('employeeName');\n    const priceCategoryControl = this.fEdit.get('priceCategory');\n    const definitionControl = this.fEdit.get('definition');\n  \n    // Check if controls are not null\n    if (\n      employeeIdControl &&\n      employeeNameControl &&\n      priceCategoryControl &&\n      definitionControl\n    ) {\n      const employeeId = employeeIdControl.value;\n      const employeeName = employeeNameControl.value;\n      const priceCategory = priceCategoryControl.value;\n      const definition = definitionControl.value;\n  \n      this.contService\n        .editEmployee(employeeId, employeeName, priceCategory, definition)\n        .then((arg: any) => {\n          this.editSuccess = true;\n          this.editEmployeeForm = false;\n        });\n    }\n  }\n  \n\n  deleteEmployee(employeeId: string | undefined) {\n    var result = confirm('Sure to delete?');\n    if (result) {\n      //Logic to delete the item\n      this.contService.deleteEmployee(employeeId).then((arg: any) => {\n        this.deleteSuccess = true;\n      });\n    }\n  }\n\n  getEmployees() {\n    this.employees = [];\n    this.contService.getEmployees().subscribe((arg: any[]) => {\n      arg.forEach((res: { payload: { doc: { data: () => { (): any; new(): any; employeeName: any; definition: any; }; id: any; }; }; }) => {\n        this.employees.push(\n          {\n            employeeName: res.payload.doc.data().employeeName,\n            data:  res.payload.doc.data() ,\n            docId: res.payload.doc.id,\n            definition: res.payload.doc.data().definition\n          })\n      })\n    })\n    // this.sorted = this.employees.sort((a, b) => {\n    //   return a.employeeName - b.employeeName;\n    // });\n  }\n\n}\n","<div class=\"container\" >\n  <div class=\"heading\">Add new Employee</div>\n  <form\n    name=\"productForm\"\n    [formGroup]=\"fg\"\n    class=\"form-inline mt-2 mt-md-0\"\n    (ngSubmit)=\"addNewEmployee()\"\n  >\n    <input\n      type=\"text\"\n      formControlName=\"employeeName\"\n      placeholder=\"Employee Name\"\n      style=\"width: 300px; padding: 3px; margin: 3px\"\n      class=\"form-control\"\n    />\n    <select formControlName=\"priceCategory\" class=\"form-control\"\n    style=\"width: 300px; padding: 3px; margin: 3px\"\n    >\n    <option value=\"0\">Select price category</option>\n      <option value=\"1\">1</option>\n      <option value=\"2\">2</option>\n      <option value=\"3\">3</option>\n      <option value=\"4\">4</option>\n    </select>\n    <input\n      type=\"text\"\n      formControlName=\"definition\"\n      placeholder=\"Definition\"\n      style=\"width: 300px; padding: 3px; margin: 3px\"\n      class=\"form-control\"\n    />\n    <div style=\"text-align: right; margin-top: 5px; width: 312px\">\n      <input type=\"submit\" name=\"btn\" value=\"Add\" [disabled]=\"!fg.valid\" />\n    </div>\n  </form>\n  <div *ngIf=\"success\" class=\"notifier\">Employee successfully added!</div>\n</div>\n<br>\n<div *ngIf=\"editEmployeeForm\" class=\"container\" style=\"background-color: whitesmoke;\">\n  <form\n    name=\"productForm\"\n    [formGroup]=\"fEdit\"\n    class=\"form-inline mt-2 mt-md-0\"\n    (ngSubmit)=\"editEmployee()\"\n  >\n    <table>\n      <tr>\n        <th>Employee Name</th>\n        <th>Price Category</th>\n        <th>Definition</th>\n      </tr>\n      <tr>\n          <input\n            type=\"hidden\"\n            formControlName=\"employeeId\"\n            style=\"width: 100px; padding: 3px; margin: 3px\"\n            class=\"form-control\"\n          />\n\n        <td>\n          <input\n            type=\"text\"\n            formControlName=\"employeeName\"\n            style=\"width: 400px; padding: 3px; margin: 3px\"\n            class=\"form-control\"\n          />\n        </td>\n        <td>\n          <select formControlName=\"priceCategory\" class=\"form-control\">\n            <option value=\"1\">1</option>\n            <option value=\"2\">2</option>\n            <option value=\"3\">3</option>\n            <option value=\"4\">4</option>\n          </select>\n        </td>\n        <td>\n          <input\n            type=\"text\"\n            formControlName=\"definition\"\n            style=\"width: 100px; padding: 3px; margin: 3px\"\n            class=\"form-control\"\n          />\n        </td>\n      </tr>\n      <tr>\n        <td>\n          <tr>\n            <td>\n              <input\n                type=\"submit\"\n                name=\"btn\"\n                value=\"Submit\"\n                style=\"margin-left: 5px\"\n                class=\"nice-button\"\n              />\n            </td>\n            <td>\n              <input\n                type=\"button\"\n                name=\"btn\"\n                value=\"Cancel\"\n                style=\"margin-left: 5px; background-color: red; border:1px solid rgb(77, 5, 5); padding: 3px; color:snow \"\n                class=\"nice-button\"\n                (click)=\"editEmployeeForm = false\"\n              />\n            </td>\n          </tr>\n        </td>\n      </tr>\n    </table>\n  </form>\n</div>\n<br>\n<div class=\"container\" style=\"background-color:rgb(235, 231, 231); padding:1px; border-radius: 8px;\" >\n  <div class=\"heading\">Existing Employees </div>\n  <table class=\"table-heading\" style=\"width: 100%; padding: 3px; background-color: rgb(163, 159, 159);\">\n    <tr  style=\"border: 0px solid gray; background-color:lightgray;color: rgb(77, 75, 75); padding: 3px;\">\n        <th width=\"250px\">\n          Name\n        </th>\n        <th>\n        Price Category\n        </th>\n        <th class=\"ml-3\">\n          Actions\n        </th>\n      </tr>\n      <tr *ngFor=\"let employee of employees\" style=\"color:rgb(39, 39, 39); border-bottom: 1px solid rgb(136, 134, 134); padding: 3px; background-color: white;\" >\n        <td width=\"250px\" style=\"margin-left: 3px;\">\n       <span style=\"margin-left: 3px;\">   {{ employee.data.employeeName }}</span>\n        </td>\n        <td  width=\"150px\">\n          {{ employee.data.priceCategory }}\n        </td>\n        <td>\n          <input\n            type=\"button\"\n            class=\"nice-button\"\n            value=\"Edit\"\n            (click)=\"preEditEmployee(employee.docId, employee.data.employeeName, employee.data.priceCategory, employee.data.definition)\"\n          />\n          <input type=\"button\" class=\"nice-button\" value=\"Delete\" (click)=\"deleteEmployee(employee.docId)\" />\n        </td>\n      </tr>\n    </table>\n  </div>\n<br>\n\n","import { formatDate } from '@angular/common';\nimport { AfterViewInit, Component, OnInit, ViewChild } from '@angular/core';\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\nimport { MatSort } from '@angular/material/sort';\nimport { MatTableDataSource } from '@angular/material/table';\nimport { Entry } from '../_model/entry';\nimport { ApexContractualService } from '../_services/apex-contractual.service';\n\ninterface Element {\n  quantity: any;\n  definition: any;\n  productId: any;\n  employeeId: any;\n  dateAdded: any;\n}\n\n@Component({\n  selector: 'app-entries',\n  templateUrl: './entries.component.html',\n  styleUrls: ['./entries.component.css'],\n})\nexport class EntriesComponent implements OnInit, AfterViewInit {\n  @ViewChild(MatSort) matSort!: MatSort;\n\n  success = false;\n  entries: any[] = [];\n  finalEnteries: any[] = [];\n  products: any[] = [];\n  employees: any[] = [];\n  finalDatas: any[] = [];\n  quantity: any;\n  employeeId!: string;\n  productId!: string;\n  fg!: FormGroup;\n  selectedMonth!: string;\n  selectedYear!: string;\n  productName!: string;\n  employeeName!: string;\n  dateAddedFromDB!: string;\n  dateMonthFromDB!: string;\n  dateMonthRequired!: string;\n  displayedColumns: string[] = [\n    'dateAdded',\n    'employeeName',\n    'productName',\n    'quantity',\n  ];\n  dataSource!: MatTableDataSource<Entry>;\n  preDataSource: any[] = [];\n  loading = false;\n\n  constructor(\n    private contService: ApexContractualService,\n    private fb: FormBuilder\n  ) {}\n\n  ngOnInit(): void {\n    if (this.dataSource) {\n      this.dataSource.sort = this.matSort;\n    }\n    this.employees = [];\n    this.getEmployees();\n    this.getProducts();\n    this.initializeForm();\n    this.selectedMonth = this.formatDateComponent(new Date(), 'MM');\n    this.selectedYear = this.formatDateComponent(new Date(), 'yy');\n    this.getEntries();\n  }\n\n  initializeForm() {\n    const format = 'dd/MM/yyyy';\n    const yesterday = new Date(new Date().getTime() - 24 * 60 * 60 * 1000);\n    const formattedDate = this.formatDateComponent(yesterday, format);\n\n    this.fg = this.fb.group({\n      quantity: ['', [Validators.required, Validators.pattern('[0-9]+')]],\n      definition: [''],\n      productId: ['0'],\n      employeeId: ['0'],\n      dateAdded: formattedDate,\n    });\n  }\n\n  getEntries(month?: string, year?: string) {\n    this.contService.getEntriesGet().subscribe((arg) => {\n      this.finalEnteries = arg.docs.map((res: any) => res.data());\n      this.createFinalData();\n    });\n  }\n\n  createFinalData(month?: string, year?: string) {\n    this.finalDatas = this.finalEnteries\n      .filter((arg: any) => arg.dateAdded)\n      .filter((arg: any) => {\n        const monthAdded = arg.dateAdded.substring(3, 5);\n        const yearAdded = arg.dateAdded.substring(8, 10);\n        this.dateMonthFromDB = monthAdded + '/' + yearAdded;\n        this.dateMonthRequired = this.selectedMonth + '/' + this.selectedYear;\n        return this.dateMonthFromDB === this.dateMonthRequired;\n      })\n      .map((arg: any) => {\n        this.quantity = arg.quantity;\n        this.dateAddedFromDB = arg.dateAdded;\n        this.productId = this.getProductById(arg.productId);\n        this.employeeId = arg.id;\n        return {\n          productName: this.productName,\n          employeeName: this.employeeName,\n          quantity: this.quantity,\n          dateAdded: this.dateAddedFromDB,\n          productId: this.productId,\n          employeeId: this.employeeId,\n        };\n      });\n\n    this.dataSource = new MatTableDataSource<Entry>(this.finalDatas);\n    this.dataSource.sort = this.matSort;\n  }\n\n  getEmployeeById(empId: any) {\n    \n  }\n\n  formatDateComponent(date: Date, format: string): string {\n    return formatDate(date, format, 'en-US');\n  }\n\n  changeMonth(event: any) {\n    this.selectedMonth = event;\n    this.getEntries(this.selectedMonth, this.selectedYear);\n  }\n\n  changeYear(event: any) {\n    this.selectedYear = event;\n    this.getEntries(this.selectedMonth, this.selectedYear);\n  }\n\n  getProducts() {\n    this.contService.getProducts().subscribe((res) => {\n      this.products = res.map((arg) => ({\n        data: arg.payload.doc.data(),\n        docId: arg.payload.doc.id,\n      }));\n    });\n  }\n  \n  getEmployees() {\n    this.contService.getEmployees().subscribe((res) => {\n      this.employees = res.map((arg) => ({\n        data: arg.payload.doc.data(),\n        docId: arg.payload.doc.id,\n      }));\n    });\n  }\n\n  addNewEntry() {\n    this.loading = true;\n    const quantity = this.fg.get('quantity')?.value;\n    const definition = this.fg.get('definition')?.value;\n    const productId = this.fg.get('productId')?.value;\n    const employeeId = this.fg.get('employeeId')?.value;\n    const dateAdded = this.fg.get('dateAdded')?.value;\n\n    this.contService\n      .addNewEntry(quantity, productId, employeeId, dateAdded, definition)\n      .then(() => {\n        this.success = true;\n        this.fg.disable();\n        this.entries = [];\n        this.loading = false;\n      });\n  }\n\n  addNew() {\n    this.success = false;\n    this.fg.enable();\n  }\n\n  getEmployee(empId: string): void {\n    const employee = this.employees.find((arg) => arg.docId === empId);\n    this.employeeName = employee ? employee.data.employeeName : '';\n  }\n\n  getProductById(prodId: string): string {\n    const product = this.products.find((arg) => arg.docId === prodId);\n    return product ? product.data.productName : '';\n  }\n\n  ngAfterViewInit() {\n    if (this.dataSource) {\n      this.dataSource.sort = this.matSort;\n    }\n  }\n}\n","<!-- Add new Entry -->\n<div class=\"container\">\n  <div class=\"heading\">Add new Entry</div>\n  <form\n    name=\"productForm\"\n    [formGroup]=\"fg\"\n    class=\"form-inline mt-2 mt-md-0\"\n    (ngSubmit)=\"addNewEntry()\"\n  >\n    <input\n      type=\"text\"\n      formControlName=\"dateAdded\"\n      style=\"width: 100px; padding: 3px; margin: 3px\"\n      class=\"form-control\"\n    />\n    <select formControlName=\"employeeId\" class=\"form-select\">\n      <option value=\"0\">Select Employee</option>\n      <option *ngFor=\"let employee of employees\" [value]=\"employee.docId\">\n        {{ employee.data.employeeName }}\n      </option>\n    </select>\n    <select formControlName=\"productId\" class=\"form-select\">\n      <option value=\"0\">Select Product</option>\n      <option *ngFor=\"let product of products\" [value]=\"product.docId\">\n        {{ product.data.productName }}\n      </option>\n    </select>\n    <input\n      type=\"text\"\n      formControlName=\"quantity\"\n      placeholder=\"Quantity\"\n      style=\"width: 100px; padding: 3px; margin: 3px\"\n      class=\"form-control\"\n    />\n    <input\n      type=\"text\"\n      formControlName=\"definition\"\n      placeholder=\"Definition\"\n      style=\"width: 300px; padding: 3px; margin: 3px\"\n      class=\"form-control\"\n    />\n    <div style=\"text-align: right; margin-top: 5px; width: 312px\">\n      <input type=\"submit\" name=\"btn\" value=\"Add\" [disabled]=\"!fg.valid\" />\n    </div>\n  </form>\n  <div class=\"loader\" *ngIf=\"loading\">Loading...</div>\n\n  <div *ngIf=\"success\" class=\"notifier\">\n    Entry successfully added!\n    <button (click)=\"addNew()\" class=\"nice-button btn btn-success\">Add new</button>\n  </div>\n</div>\n<br />\n\n<!-- Existing Entries -->\n<div class=\"container\">\n  <div class=\"heading ml-5; width:100%\">\n    Existing Entries\n    <select\n      style=\"padding: 3px; margin-left: 10px\"\n      id=\"month\"\n      (change)=\"changeMonth($event)\"\n    >\n    <option value=\"20\" [selected]=\"selectedYear == '20'\">2020</option>\n      <option value=\"21\" [selected]=\"selectedYear == '21'\">2021</option>\n      <option value=\"22\" [selected]=\"selectedYear == '22'\">2022</option>\n      <option value=\"23\" [selected]=\"selectedYear == '23'\">2023</option>\n      <option value=\"24\" [selected]=\"selectedYear == '24'\">2024</option>\n      <option value=\"25\" [selected]=\"selectedYear == '25'\">2025</option>\n      <option value=\"26\" [selected]=\"selectedYear == '26'\">2026</option>\n      <option value=\"27\" [selected]=\"selectedYear == '27'\">2027</option>\n      <option value=\"28\" [selected]=\"selectedYear == '28'\">2028</option>\n      <option value=\"29\" [selected]=\"selectedYear == '29'\">2029</option>\n      <option value=\"30\" [selected]=\"selectedYear == '30'\">2030</option>\n      <option value=\"31\" [selected]=\"selectedYear == '31'\">2031</option>\n    </select>\n    <select\n      style=\"padding: 3px; margin-left: 10px\"\n      id=\"year\"\n      (change)=\"changeYear($event)\"\n    >\n    <option value=\"02\" [selected]=\"selectedMonth == '02'\">February</option>\n      <option value=\"03\" [selected]=\"selectedMonth == '03'\">March</option>\n      <option value=\"04\" [selected]=\"selectedMonth == '04'\">April</option>\n      <option value=\"05\" [selected]=\"selectedMonth == '05'\">May</option>\n      <option value=\"06\" [selected]=\"selectedMonth == '06'\">June</option>\n      <option value=\"07\" [selected]=\"selectedMonth == '07'\">July</option>\n      <option value=\"08\" [selected]=\"selectedMonth == '08'\">August</option>\n      <option value=\"09\" [selected]=\"selectedMonth == '09'\">September</option>\n      <option value=\"10\" [selected]=\"selectedMonth == '10'\">October</option>\n      <option value=\"11\" [selected]=\"selectedMonth == '11'\">November</option>\n      <option value=\"12\" [selected]=\"selectedMonth == '12'\">December</option>\n    </select>\n  </div>\n\n  <table mat-table matSort class=\"mat-elevation-z8\" [dataSource]=\"dataSource\" style=\"width: 100%;\">\n    <ng-container matColumnDef=\"dateAdded\">\n      <th mat-header-cell *matHeaderCellDef mat-sort-header>Date</th>\n      <td mat-cell *matCellDef=\"let finalData\">{{ finalData.dateAdded }}</td>\n    </ng-container>\n    <ng-container matColumnDef=\"employeeName\">\n      <th mat-header-cell *matHeaderCellDef mat-sort-header>Employee Name</th>\n      <td mat-cell *matCellDef=\"let finalData\">{{ finalData.employeeName }}</td>\n    </ng-container>\n    <ng-container matColumnDef=\"productName\">\n      <th mat-header-cell *matHeaderCellDef mat-sort-header>Product</th>\n      <td mat-cell *matCellDef=\"let finalData\">{{ finalData.productName }}</td>\n    </ng-container>\n    <ng-container matColumnDef=\"quantity\">\n      <th mat-header-cell *matHeaderCellDef mat-sort-header>Quantity</th>\n      <td mat-cell *matCellDef=\"let finalData\">{{ finalData.quantity }}</td>\n    </ng-container>\n    <tr mat-header-row *matHeaderRowDef=\"displayedColumns\"></tr>\n    <tr mat-row *matRowDef=\"let finalData; columns: displayedColumns\"></tr>\n  </table>\n</div>\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false,\n  firebase:{\n    apiKey: \"AIzaSyDod4I8TQ_3FX7ScbIkVxkzuJJtxwOP5Mw\",\n    authDomain: \"contractual-e220f.firebaseapp.com\",\n    projectId: \"contractual-e220f\",\n    storageBucket: \"contractual-e220f.appspot.com\",\n    messagingSenderId: \"506601902944\",\n    appId: \"1:506601902944:web:24d06b93b9ef8281178405\",\n    measurementId: \"G-PBB05C5SEW\"\n  }\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { formatDate } from '@angular/common';\nimport { Component, OnInit, ViewChild } from '@angular/core';\nimport { FormGroup, FormBuilder, Validators } from '@angular/forms';\nimport { MatSort } from '@angular/material/sort';\nimport { MatTableDataSource } from '@angular/material/table';\nimport { ApexContractualService } from '../_services/apex-contractual.service';\n\n@Component({\n  selector: 'app-manage-entries',\n  templateUrl: './manage-entries.component.html',\n  styleUrls: ['./manage-entries.component.css']\n})\nexport class ManageEntriesComponent implements OnInit {\n  @ViewChild(MatSort) sort!: MatSort;\n\n  success = false;\n  entries: any[] = [];\n  finalEntries: any[] = [];\n  products: any[] = [];\n  employees: any[] = [];\n  finalDatas: any[] = [];\n  quantity: any;\n  employeeId: string = '';\n  productId: string = '';\n  fg!: FormGroup;\n  selectedMonth: string | number = '';\n  selectedYear: string = '';\n  productName: string = '';\n  employeeName: string = '';\n  dateAddedFromDB: string = '';\n  dateMonthFromDB: string = '';\n  dateMonthRequired: string = '';\n  displayedColumns: string[] = ['dateAdded', 'employeeName', 'productName', 'quantity'];\n  dataSource: MatTableDataSource<any> | null = null;\n  preDataSource: any[] = [];\n\n  constructor(\n    private contService: ApexContractualService,\n    private fb: FormBuilder\n  ) {}\n\n  ngOnInit(): void {\n    this.getEmployees();\n    this.getProducts();\n    const format = 'dd/MM/yyyy';\n    const myDate = Date.now();\n    const locale = 'en-US';\n    const formattedDate = formatDate(myDate, format, locale);\n    this.selectedMonth = ('0' + (new Date().getMonth() + 1)).slice(-2);\n    this.selectedYear = new Date().getFullYear().toString().slice(-2);\n    this.getEntries();\n    this.fg = this.fb.group({\n      quantity: ['', [Validators.required, Validators.pattern('[0-9]+')]],\n      definition: [''],\n      productId: [''],\n      employeeId: [''],\n      dateAdded: formattedDate,\n    });\n  }\n\n  getEntries(): void {\n    this.finalEntries = [];\n    this.contService.getEntries().subscribe((arg: any[]) => {\n      this.finalEntries = arg;\n      this.createFinalData();\n    });\n  }\n\n  createFinalData(): void {\n    this.finalDatas = this.finalEntries\n      .filter((arg) => {\n        const monthAdded = arg.dateAdded.substring(3, 5);\n        const yearAdded = arg.dateAdded.substring(8, 10);\n        this.dateMonthFromDB = monthAdded + '/' + yearAdded;\n        this.dateMonthRequired = this.selectedMonth + '/' + this.selectedYear;\n        return this.dateMonthFromDB === this.dateMonthRequired;\n      })\n      .map((arg) => {\n        this.quantity = arg.quantity;\n        this.dateAddedFromDB = arg.dateAdded;\n\n        const product = this.products.find((p) => p.docId === arg.productId);\n        const employee = this.employees.find((emp) => emp.docId === arg.employeeId);\n\n        return {\n          productName: product ? product.data.productName : '',\n          employeeName: employee ? employee.data.employeeName : '',\n          quantity: this.quantity,\n          dateAdded: this.dateAddedFromDB,\n          productId: product ? product.docId : '',\n          employeeId: employee ? employee.docId : '',\n        };\n      });\n\n    this.dataSource = new MatTableDataSource(this.finalDatas);\n    this.dataSource.sort = this.sort;\n  }\n\n  changeMonth(event: any): void {\n    this.selectedMonth = event.value;\n    this.getEntries();\n  }\n\n  changeYear(event: any): void {\n    this.selectedYear = event.value;\n    this.getEntries();\n  }\n\n  getProducts(): void {\n    this.contService.getProducts().subscribe((res: any[]) => {\n      this.products = res.map((arg: { payload: { doc: { data: () => any; id: any; }; }; }) => ({\n        data: arg.payload.doc.data(),\n        docId: arg.payload.doc.id,\n      }));\n    });\n  }\n\n  getEmployees(): void {\n    this.contService.getEmployees().subscribe((res: any[]) => {\n      this.employees = res.map((arg: { payload: { doc: { data: () => any; id: any; }; }; }) => ({\n        data: arg.payload.doc.data(),\n        docId: arg.payload.doc.id,\n      }));\n    });\n  }\n\n  addNewEntry(): void {\n    const quantity = this.fg.get('quantity')?.value;\n    const definition = this.fg.get('definition')?.value;\n    const productId = this.fg.get('productId')?.value;\n    const employeeId = this.fg.get('employeeId')?.value;\n    const dateAdded = this.fg.get('dateAdded')?.value;\n  \n    if (quantity !== undefined && definition !== undefined && productId !== undefined &&\n        employeeId !== undefined && dateAdded !== undefined) {\n      this.contService\n        .addNewEntry(quantity, productId, employeeId, dateAdded, definition)\n        .then(() => {\n          this.success = true;\n          this.getEntries();\n        });\n    } else {\n      console.error('One or more form controls are null or undefined.');\n    }\n  }\n  \n\n  ngAfterViewInit(): void {\n    if (this.dataSource) {\n      this.dataSource.sort = this.sort;\n    }\n  }\n}\n","<p>manage-entries works!</p>\na<div class=\"container\">\n  <div class=\"heading\">Add new Entry</div>\n  <form\n    name=\"productForm\"\n    [formGroup]=\"fg\"\n    class=\"form-inline mt-2 mt-md-0\"\n    (ngSubmit)=\"addNewEntry()\"\n  >\n    <input\n      type=\"text\"\n      formControlName=\"dateAdded\"\n      style=\"width: 100px; padding: 3px; margin: 3px\"\n      class=\"form-control\"\n    />\n    <select\n      formControlName=\"employeeId\"\n      placeholder=\"dsfsf\"\n      class=\"form-select\"\n    >\n      <option [selected]=\"true\">Select employee</option>\n      <option *ngFor=\"let employee of employees\" value=\"{{ employee.docId }}\">\n        {{ employee.data.employeeName }}\n      </option>\n    </select>\n    <select formControlName=\"productId\" class=\"form-select\">\n      <option [selected]=\"true\">Select Product</option>\n      <option *ngFor=\"let product of products\" value=\"{{ product.docId }}\">\n        {{ product.data.productName }}\n      </option>\n    </select>\n    <input\n      type=\"text\"\n      formControlName=\"quantity\"\n      placeholder=\"Quantity\"\n      style=\"width: 100px; padding: 3px; margin: 3px\"\n      class=\"form-control\"\n    />\n    <input\n      type=\"text\"\n      formControlName=\"definition\"\n      placeholder=\"Definition\"\n      style=\"width: 300px; padding: 3px; margin: 3px\"\n      class=\"form-control\"\n    />\n    <div style=\"text-align: right; margin-top: 5px; width: 312px\">\n      <input type=\"submit\" name=\"btn\" value=\"Add\" [disabled]=\"!fg.valid\" />\n    </div>\n  </form>\n  <div *ngIf=\"success\" class=\"notifier\">Entry successfully added!</div>\n</div>\n<br />\n<br />\n\n<div\n  class=\"container\"\n  style=\"background-color: skyblue; padding: 1px; width: 70%\"\n>\n  <div class=\"heading ml-5\">\n    Existing Entries\n    <select\n      style=\"padding: 3px; margin-left: 10px\"\n      id=\"month\"\n      (change)=\"changeMonth($event)\"\n\n    >\n<option value=\"01\" [selected]=\"selectedMonth === '01'\">January</option>\n<option value=\"02\" [selected]=\"selectedMonth === '02'\">February</option>\n<option value=\"03\" [selected]=\"selectedMonth === '03'\">March</option>\n<option value=\"04\" [selected]=\"selectedMonth === '04'\">April</option>\n<option value=\"05\" [selected]=\"selectedMonth === '05'\">May</option>\n<option value=\"06\" [selected]=\"selectedMonth === '06'\">June</option>\n<option value=\"07\" [selected]=\"selectedMonth === '07'\">July</option>\n<option value=\"08\" [selected]=\"selectedMonth === '08'\">August</option>\n<option value=\"09\" [selected]=\"selectedMonth === '09'\">September</option>\n<option value=\"10\" [selected]=\"selectedMonth === '10'\">October</option>\n<option value=\"11\" [selected]=\"selectedMonth === '11'\">November</option>\n<option value=\"12\" [selected]=\"selectedMonth === '12'\">December</option>\n\n    </select>\n    <select\n      style=\"padding: 3px; margin-left: 10px\"\n      id=\"year\"\n      (change)=\"changeYear($event)\"\n    >\n      <option value=\"20\" [selected]=\"selectedYear == '20'\">2020</option>\n      <option value=\"21\" [selected]=\"selectedYear == '21'\">2021</option>\n      <option value=\"22\" [selected]=\"selectedYear == '22'\">2022</option>\n      <option value=\"23\" [selected]=\"selectedYear == '23'\">2023</option>\n      <option value=\"24\" [selected]=\"selectedYear == '24'\">2024</option>\n      <option value=\"25\" [selected]=\"selectedYear == '25'\">2025</option>\n      <option value=\"26\" [selected]=\"selectedYear == '26'\">2026</option>\n      <option value=\"27\" [selected]=\"selectedYear == '27'\">2027</option>\n      <option value=\"28\" [selected]=\"selectedYear == '28'\">2028</option>\n      <option value=\"29\" [selected]=\"selectedYear == '29'\">2029</option>\n      <option value=\"30\" [selected]=\"selectedYear == '30'\">2030</option>\n      <option value=\"31\" [selected]=\"selectedYear == '31'\">2031</option>\n    </select>\n  </div>\n\n  <table mat-table matSort class=\"mat-elevation-z8\" [dataSource]=\"finalDatas\" style=\"width: 735px;\">\n    <ng-container matColumnDef=\"dateAdded\">\n      <th mat-header-cell *matHeaderCellDef mat-sort-header>Date</th>\n      <td mat-cell *matCellDef=\"let finalData\">{{ finalData.dateAdded }}</td>\n    </ng-container>\n    <ng-container matColumnDef=\"employeeName\">\n      <th mat-header-cell *matHeaderCellDef mat-sort-header>Employee Name</th>\n      <td mat-cell *matCellDef=\"let finalData\">{{ finalData.employeeName }}</td>\n    </ng-container>\n    <ng-container matColumnDef=\"productName\">\n      <th mat-header-cell *matHeaderCellDef mat-sort-header>Product</th>\n      <td mat-cell *matCellDef=\"let finalData\">{{ finalData.productName }}</td>\n    </ng-container>\n    <ng-container matColumnDef=\"quantity\">\n      <th mat-header-cell *matHeaderCellDef mat-sort-header>Quantity</th>\n      <td mat-cell *matCellDef=\"let finalData\">{{ finalData.quantity }}</td>\n    </ng-container>\n    <tr mat-header-row *matHeaderRowDef=\"displayedColumns\"></tr>\n    <tr mat-row *matRowDef=\"let finalData; columns: displayedColumns\"></tr>\n  </table>\n</div>\n","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-nav',\n  templateUrl: './nav.component.html',\n  styleUrls: ['./nav.component.css']\n})\nexport class NavComponent {\n\n}\n","<div class=\"d-flex flex-column flex-md-row align-items-center pb-3 mb-4 border-bottom\">\n    <a href=\"/\" class=\"d-flex align-items-center text-dark text-decoration-none\">\n      <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"40\" height=\"32\" class=\"me-2\" viewBox=\"0 0 118 94\" role=\"img\"><title>Bootstrap</title><path fill-rule=\"evenodd\" clip-rule=\"evenodd\" d=\"M24.509 0c-6.733 0-11.715 5.893-11.492 12.284.214 6.14-.064 14.092-2.066 20.577C8.943 39.365 5.547 43.485 0 44.014v5.972c5.547.529 8.943 4.649 10.951 11.153 2.002 6.485 2.28 14.437 2.066 20.577C12.794 88.106 17.776 94 24.51 94H93.5c6.733 0 11.714-5.893 11.491-12.284-.214-6.14.064-14.092 2.066-20.577 2.009-6.504 5.396-10.624 10.943-11.153v-5.972c-5.547-.529-8.934-4.649-10.943-11.153-2.002-6.484-2.28-14.437-2.066-20.577C105.214 5.894 100.233 0 93.5 0H24.508zM80 57.863C80 66.663 73.436 72 62.543 72H44a2 2 0 01-2-2V24a2 2 0 012-2h18.437c9.083 0 15.044 4.92 15.044 12.474 0 5.302-4.01 10.049-9.119 10.88v.277C75.317 46.394 80 51.21 80 57.863zM60.521 28.34H49.948v14.934h8.905c6.884 0 10.68-2.772 10.68-7.727 0-4.643-3.264-7.207-9.012-7.207zM49.948 49.2v16.458H60.91c7.167 0 10.964-2.876 10.964-8.281 0-5.406-3.903-8.178-11.425-8.178H49.948z\" fill=\"currentColor\"></path></svg>\n    </a>\n    <nav class=\"d-inline-flex mt-2 mt-mdz-0 ms-md-auto p-3\">\n      <a class=\"me-3 py-2 mr-3 text-dark text-decoration-none\" href=\"product-master\">Products</a>\n      <a class=\"me-3 py-2 p-3 text-dark text-decoration-none\" href=\"employee-master\">Employees</a>\n      <a class=\"me-3 py-2 text-dark text-decoration-none\" href=\"entries\">Enteries</a>\n      <a class=\"me-3 py-2 text-dark text-decoration-none\" href=\"search\">Search</a>\n      <a class=\"me-3 py-2 text-dark text-decoration-none\" href=\"price\">Pricing</a>\n      <a class=\"me-3 py-2 text-dark text-decoration-none\" href=\"calculate\">Calculate</a>\n</nav>","<div class=\"container\">\n  <div class=\"heading\">Add new Entry</div>\n  <form\n    name=\"productForm\"\n    [formGroup]=\"fg\"\n    class=\"form-inline mt-2 mt-md-0\"\n    (ngSubmit)=\"addNewPrice()\"\n  >\n  \n    <!-- <select formControlName=\"employeeId\" class=\"form-control\">\n      <option *ngFor=\"let employee of employees\" value=\"{{ employee.docId }}\">\n        {{ employee.data.employeeName }}\n      </option>\n    </select> -->\n\n    <select formControlName=\"productId\" class=\"form-control\" style=\"width: 300px;\">\n      <option *ngFor=\"let product of products\" value=\"{{ product.docId }}\">\n        {{ product.productName }}\n      </option>\n    </select>\n    <input\n      type=\"text\"\n      formControlName=\"price\"\n      placeholder=\"Price category 1\"\n      style=\"width: 150px; padding: 3px; margin: 3px\"\n      class=\"form-control\"\n    />\n    <input\n    type=\"text\"\n    formControlName=\"price2\"\n    placeholder=\"Price category 2\"\n    style=\"width: 150px; padding: 3px; margin: 3px\"\n    class=\"form-control\"\n  />\n  <input\n  type=\"text\"\n  formControlName=\"price3\"\n  placeholder=\"Price category 3\"\n  style=\"width: 150px; padding: 3px; margin: 3px\"\n  class=\"form-control\"\n/>\n<input\ntype=\"text\"\nformControlName=\"comments\"\nplaceholder=\"Additional info\"\nstyle=\"width: 550px; padding: 3px; margin: 3px\"\nclass=\"form-control\"\n/>\n    <input type=\"submit\" name=\"btn\" value=\"Add\" style=\"margin-left: 15px\" />\n  </form>\n  <div *ngIf=\"success\" class=\"notifier\">Employee successfully added!</div>\n</div>\n<br />\n<div *ngIf=\"editPriceForm\" class=\"container\" style=\"background-color: whitesmoke;\">\n  <form\n    name=\"productForm\"\n    [formGroup]=\"fEdit\"\n    class=\"form-inline mt-2 mt-md-0\"\n    (ngSubmit)=\"editPrice()\"\n  >\n    <table>\n      <tr>\n        <th>Product</th>\n        <th>Price categoty 1</th>\n        <th>Price category 2</th>\n      </tr>\n      <tr>\n          <input\n            type=\"hidden\"\n            formControlName=\"priceId\"\n            style=\"width: 100px; padding: 3px; margin: 3px\"\n            class=\"form-control\"\n          />\n        <input\n        type=\"hidden\"\n        formControlName=\"productId\"\n        style=\"width: 100px; padding: 3px; margin: 3px\"\n        class=\"form-control\"\n      />\n\n        <td>\n          <input\n            type=\"text\"\n            formControlName=\"productName\"\n            style=\"width: 400px; padding: 3px; margin: 3px\"\n            class=\"form-control\"\n          />\n        </td>\n        <td>\n          <input\n            type=\"text\"\n            formControlName=\"price\"\n            style=\"width: 100px; padding: 3px; margin: 3px\"\n            class=\"form-control\"\n          />\n        </td>\n        <td>\n          <input\n            type=\"text\"\n            formControlName=\"price2\"\n            style=\"width: 100px; padding: 3px; margin: 3px\"\n            class=\"form-control\"\n          />\n        </td>\n      </tr>\n      <tr>\n        <td>\n          <tr>\n            <td>\n              <input\n                type=\"submit\"\n                name=\"btn\"\n                value=\"Submit\"\n                style=\"margin-left: 5px\"\n                class=\"nice-button\"\n              />\n            </td>\n            <td>\n              <input\n                type=\"button\"\n                name=\"btn\"\n                value=\"Cancel\"\n                style=\"margin-left: 5px; background-color: red; border:1px solid rgb(77, 5, 5); padding: 3px; color:snow \"\n                class=\"nice-button\"\n                (click)=\"editPriceForm = false\"\n              />\n            </td>\n          </tr>\n        </td>\n      </tr>\n    </table>\n  </form>\n</div>\n<br>\n<div class=\"container\">\n\n  <table\n    style=\"width: 100%; padding: 5px; border: 1px solid grey; background-color: rgb(227, 242, 252);\"\n    *ngIf=\"successData\"\n  >\n    <tr\n      style=\"\n        border: 0px solid grey;\n        margin-left: 5px;\n        width: 100%;\n        color: rgb(75, 73, 73);\n        background-color: white;\n      \"\n    >\n      <th>Product</th>\n      <th>Rate Category 1</th>\n      <th>Rate Category 2</th>\n      <th>Actions</th>\n    </tr>\n    <tr\n      *ngFor=\"let price of finalData\"\n      style=\"\n        border: 1px solid grey;\n        margin-left: 5px;\n        width: 70%;\n        color: rgb(27, 27, 27);\n      \"\n    >\n      <td >\n       <span class=\"ml-4\"> {{ price.productName }}</span>\n      </td>\n      <td>\n        {{ price.price }}\n      </td>\n      <td>\n        {{ price.price2 }}\n      </td>\n      <td>\n        <input\n          type=\"button\"\n          class=\"nice-button\"\n          value=\"Edit\"\n          (click)=\"\n            preEditPrice(\n              price.docId,\n              price.productName,\n              price.price,\n              price.price2\n            )\n          \"\n        />\n        <input type=\"button\" class=\"nice-button\" value=\"Delete\" (click)=\"deletePrice(price.docId)\" />\n      </td>\n    </tr>\n  </table>\n  <div *ngIf=\"deleteSuccess\" class=\"notifier\">Deleted!</div>\n\n\n</div>\n","  import { Component, OnInit } from '@angular/core';\n  import { FormGroup, FormBuilder } from '@angular/forms';\n  import { Product } from '../../_model/product';\n  import { ApexContractualService } from '../..//_services/apex-contractual.service';\n\n  @Component({\n    selector: 'app-price',\n    templateUrl: './price.component.html',\n    styleUrls: ['./price.component.css'],\n  })\n\n\n\n  export class PriceComponent implements OnInit {\n    \n    success = false;\n    successData = false;\n    editSuccess = false;\n    deleteSuccess = false;\n    editPriceForm = false;\n    products : Product[] = [];\n\n    prices = [];\n    finalPrices: { data: any; docId: any }[] = [];\n    finalData: { \n      productName: any;\n      productId: any;\n      price: any;\n      price2: any;\n      price3: any;\n      comments: any;\n      docId: any;\n    }[] = [];\n    dateMonthFromDB: any;\n    dateMonthRequired: any;\n    dateAddedFromDB: any;\n    productId: any;\n    productName: any;\n\n\n    fg!: FormGroup;\n    fEdit!: FormGroup;\n\n    constructor(\n      private contService: ApexContractualService,\n      private fb: FormBuilder\n    ) {}\n\n    \n\n    ngOnInit(): void {\n      this.getProducts();\n      this.getPrices();\n      this.fg = this.fb.group({\n        productId: [''],\n        price: [''],\n        price2: [''],\n        price3: [''],\n        comments: [''],\n      });\n    }\n\n\n    preEditPrice(priceId: any, productName: any, oldPrice: any, oldPrice2: any) {\n      this.fEdit = this.fb.group({\n        productId: this.productId,\n        productName: productName,\n        price: oldPrice,\n        price2: oldPrice2,\n        priceId: priceId,\n      });\n      this.editPriceForm = true;\n    }\n\n    editPrice() {\n      const priceId = this.fEdit.get('priceId')!.value;\n      const newPrice = this.fEdit.get('price')!.value;\n      const newPrice2 = this.fEdit.get('price2')!.value;\n      this.contService.editPrice(priceId, newPrice, newPrice2).then((arg: any) => {\n        this.editSuccess = true;\n      });\n    }\n\n    deletePrice(priceId: any) {\n      var result = confirm('Sure to delete?');\n      if (result) {\n        //Logic to delete the item\n        this.contService.deletePrice(priceId).then((arg: any) => {\n          this.deleteSuccess = true;\n        });\n      }\n    }\n\n    async getPrices(empId?: undefined) {\n      this.prices = [];\n      this.finalPrices = [];\n      this.contService.getPrices(empId).subscribe((arg: any[]) => {  // <-- Add type here\n        arg.forEach((res: { payload: { doc: { data: () => any; id: any; }; }; }) => {\n          this.finalPrices.push({\n            data: res.payload.doc.data(),\n            docId: res.payload.doc.id,\n          });\n        });\n        this.createFinalData();\n      });\n    }\n\n    // ... (existing code)\n\n    async createFinalData() {\n      this.finalData = [];\n      this.finalPrices.forEach((arg) => {\n        const price = arg.data.price;\n        this.products.forEach((product: any) => { // Add type 'any' or replace with the actual type\n          if (product.docId == arg.data.productId) {\n            this.productName = product.productName;\n            this.productId = product.docId;\n          }\n        });\n        this.finalData.push({\n          productName: this.productName,\n          productId: this.productId,\n          price: arg.data.price,\n          price2: arg.data.price2,\n          price3: arg.data.price3,\n          comments: arg.data.comments,\n          docId: arg.docId,\n        });\n        this.successData = true;\n      });\n    }\n    \n    addNewPrice() {\n      const productId = this.fg.get('productId')!.value;\n      const price = this.fg.get('price')!.value;\n      const price2 = this.fg.get('price2')!.value;\n      const comments = this.fg.get('comments')!.value;\n      const price3 = this.fg.get('price3')!.value;\n    \n      this.contService\n        .addNewPrice(productId, price, price2, price3, comments)\n        .then((res: any) => {\n          this.success = true;\n        });\n    }\n    \n  getProducts() {\n    this.products = [];\n    this.contService.getProducts().subscribe((arg: any[]) => {\n      arg.forEach((res: { payload: { doc: { data: () => { (): any; new(): any; productName: any; definition: any; }; id: any; }; }; }) => \n        this.products.push({\n          productName: res.payload.doc.data().productName,\n          definition: res.payload.doc.data().definition,\n          docId: res.payload.doc.id,\n          data: res\n        })\n      );\n    });\n  }\n\n  }\n\n","import { Component, ElementRef, OnInit, ViewChild } from '@angular/core';\nimport { FormGroup, FormBuilder, Validators } from '@angular/forms';\nimport { ApexContractualService } from '../_services/apex-contractual.service';\nimport { Product } from 'app/_model/product';\n\n@Component({\n  selector: 'app-product-master',\n  templateUrl: './product-master.component.html',\n  styleUrls: ['./product-master.component.css'],\n})\nexport class ProductMasterComponent implements OnInit {\n  @ViewChild('editProd', { static: false })\n  editProds!: ElementRef;\n\n  success = false;\n  editSuccess = false;\n  deleteSuccess = false;\n  products: Product[]  = [];\n  finalData = [];\n  fg!: FormGroup;\n  fEdit!: FormGroup;\n  editProductForm = false;\n\n  constructor(\n    private contService: ApexContractualService,\n    private fb: FormBuilder\n  ) {}\n\n  ngOnInit(): void {\n    this.initializeForms();\n    this.getProducts();\n  }\n\n  initializeForms(): void {\n    this.fg = this.fb.group({\n      productName: ['', Validators.required],\n      definition: [''],\n      size: [''],\n    });\n\n    this.fEdit = this.fb.group({\n      productId: [''],\n      productName: [''],\n      definition: [''],\n    });\n  }\n\n  addNewProduct(): void {\n    const productName = this.fg.get('productName')?.value;\n    const definition = this.fg.get('definition')?.value;\n    const size = this.fg.get('size')?.value;\n\n    this.contService.addNewProduct(productName, size, definition).then(() => {\n      this.handleSuccess('Product added successfully.');\n    });\n  }\n\n  preEditProduct(productId: any, productName: any, oldDef: any): void {\n    this.fEdit.setValue({ productId, productName, definition: oldDef });\n    this.editProductForm = true;\n    // this.editProds.nativeElement.focus();\n  }\n\n  editProduct(): void {\n    const productId = this.fEdit.get('productId')?.value;\n    const productName = this.fEdit.get('productName')?.value;\n    const definition = this.fEdit.get('definition')?.value;\n\n    this.contService.editProduct(productId, productName, definition).then(() => {\n      this.handleSuccess('Product edited successfully.');\n      this.editProductForm = false;\n    });\n  }\n\n  deleteProduct(productId: string | undefined): void {\n    const result = confirm('Sure to delete?');\n    if (result) {\n      this.contService.deleteProduct(productId).then(() => {\n        this.handleSuccess('Product deleted successfully.');\n      });\n    }\n  }\n\n  getProducts(): void {\n    this.products = [];\n    this.contService.getProducts().subscribe((snapshots) => {\n      snapshots.forEach((snapshot) => {\n        this.products.push({\n          productName: snapshot.payload.doc.data().productName,\n          docId: snapshot.payload.doc.id,\n          definition: snapshot.payload.doc.data().definition,\n          data: snapshot.payload.doc.data()\n        });\n      });\n    });\n  }\n\n  private handleSuccess(message: string): void {\n    // Common method to handle success messages\n    // You can customize this method based on your application's needs.\n    this.success = true; // or any other logic to display success message\n    console.log(message);\n  }\n}\n","<div\nclass=\"container\"\n>\n  <div class=\"heading\">Add new Product</div>\n  <form\n    name=\"productForm\"\n    [formGroup]=\"fg\"\n    class=\"form-inline mt-2 mt-md-0\"\n    (ngSubmit)=\"addNewProduct()\"\n  >\n    <input\n      type=\"text\"\n      formControlName=\"productName\"\n      placeholder=\"Product Name\"\n      style=\"width: 300px; padding: 3px; margin: 3px\"\n      class=\"form-control\"\n    />\n   Size: <select formControlName=\"size\" >\n      <option [selected]=\"true\" value=\"1\">1</option>\n      <option value=\"2\">2</option>\n    </select>\n    <input\n      type=\"text\"\n      formControlName=\"definition\"\n      placeholder=\"Definition\"\n      style=\"width: 300px; padding: 3px; margin: 3px\"\n      class=\"form-control\"\n    />\n    <div style=\"text-align: right; margin-top: 5px; width: 312px\">\n      <input type=\"submit\" name=\"btn\" value=\"Add\" [disabled]=\"!fg.valid\" />\n    </div>\n  </form>\n  <div *ngIf=\"success\" class=\"notifier\">Product successfully added!</div>\n</div>\n<br />\n<div *ngIf=\"editProductForm\" class=\"container\" style=\"background-color: whitesmoke;\" #editProd>\n  <form\n    name=\"productForm\"\n    [formGroup]=\"fEdit\"\n    class=\"form-inline mt-2 mt-md-0\"\n    (ngSubmit)=\"editProduct()\"\n  >\n    <table>\n      <tr>\n        <th>Product Name</th>\n        <th>Definition</th>\n      </tr>\n      <tr>\n          <input\n            type=\"hidden\"\n            formControlName=\"productId\"\n            style=\"width: 100px; padding: 3px; margin: 3px\"\n            class=\"form-control\"\n          />\n\n        <td>\n          <input\n            type=\"text\"\n            formControlName=\"productName\"\n            style=\"width: 400px; padding: 3px; margin: 3px\"\n            class=\"form-control\"\n          />\n        </td>\n        <td>\n          <input\n            type=\"text\"\n            formControlName=\"definition\"\n            style=\"width: 100px; padding: 3px; margin: 3px\"\n            class=\"form-control\"\n          />\n        </td>\n      </tr>\n      <tr>\n        <td>\n          <tr>\n            <td>\n              <input\n                type=\"submit\"\n                name=\"btn\"\n                value=\"Submit\"\n                style=\"margin-left: 5px\"\n                class=\"nice-button\"\n              />\n            </td>\n            <td>\n              <input\n                type=\"button\"\n                name=\"btn\"\n                value=\"Cancel\"\n                style=\"margin-left: 5px; background-color: red; border:1px solid rgb(77, 5, 5); padding: 3px; color:snow \"\n                class=\"nice-button\"\n                (click)=\"editProductForm = false\"\n              />\n            </td>\n          </tr>\n        </td>\n      </tr>\n    </table>\n  </form>\n</div>\n<br>\n<div class=\"container\" style=\"background-color:rgb(235, 231, 231); padding:1px; border-radius: 8px;\" >\n  <div class=\"heading\">Existing Products </div>\n  <table class=\"table-heading\" style=\"width: 100%; padding: 3px; background-color: rgb(163, 159, 159);\">\n    <tr  style=\"border: 0px solid gray; background-color:lightgray;color: rgb(77, 75, 75); padding: 3px;\">\n      <th>\n     <span style=\"margin-left: 3px;\">  Product Name</span>\n      </th>\n      <th>\n        Definition\n      </th>\n      <th class=\"ml-3\">\n        Actions\n      </th>\n    </tr>\n  <tr  *ngFor=\"let product of products\" style=\"color:rgb(39, 39, 39); border-bottom: 1px solid rgb(136, 134, 134); padding: 3px; background-color: white;\" >\n    <td >\n     <span style=\"margin-left: 3px;\"> {{ product.productName }}</span>\n    </td>\n    <td>\n      {{ product.definition }}\n    </td>\n      <td>\n        <button mat-raised-button color=\"accent\" style=\"margin-right: 8px;\"\n          value=\"Edit\"\n          (click)=\"preEditProduct(product.docId, product.data.productName,product.data.definition)\"\n        >Edit </button>\n        <button mat-raised-button color=\"warn\" (click)=\"deleteProduct(product.docId)\"> Delete </button>\n      </td>\n  </table>\n</div>\n<br>\n\n","import { formatDate } from '@angular/common';\nimport { Component, OnInit, ViewChild } from '@angular/core';\nimport { FormGroup, FormBuilder } from '@angular/forms';\nimport { MatSort } from '@angular/material/sort';\nimport { MatTableDataSource } from '@angular/material/table';\nimport { Entry } from '../_model/entry';\nimport { ApexContractualService } from '../_services/apex-contractual.service';\n\ninterface FinalData {\n  productName: string;\n  employeeName: string;\n  quantity: number;\n  dateAdded: string;\n  productId: string;\n  employeeId: string;\n  docId: string;\n  definition: string;\n}\n\n@Component({\n  selector: 'app-search',\n  templateUrl: './search.component.html',\n  styleUrls: ['./search.component.css'],\n})\nexport class SearchComponent implements OnInit {\n  @ViewChild(MatSort) matSort!: MatSort;\n\n  thisYear!: string;\n  thisMonth!: string;\n  fg!: FormGroup;\n  success = false;\n  entries: any[] = [];\n  finalEnteries: any[] = [];\n  products: any[] = [];\n  employees: any[] = [];\n  finalData: FinalData[] = [];\n  quantity!: number;\n  deleted = false;\n  employeeId!: string;\n  productId!: string;\n  selectedMonth!: string;\n  selectedYear!: string;\n  productName!: string;\n  employeeName!: string;\n  dateAddedFromDB!: string;\n  dateMonthFromDB!: string;\n  dataSource!: MatTableDataSource<FinalData>;\n  dateMonthRequired!: string;\n  fEdit!: FormGroup;\n  editEntryForm = false;\n  editSuccess = false;\n  displayedColumns: string[] = [\n    'dateAdded',\n    'employeeName',\n    'productName',\n    'quantity',\n    'definition',\n    'actions',\n  ];\n\n  constructor(\n    private contService: ApexContractualService,\n    private fb: FormBuilder\n  ) {}\n\n  ngOnInit(): void {\n    if (this.dataSource) {\n      console.log('touched');\n      this.dataSource.sort = this.matSort;\n    }\n    this.getEmployees();\n    this.getProducts();\n    var today = new Date();\n    const format = 'dd/MM/yyyy';\n    const myDate = Date.now();\n    const locale = 'en-US';\n    this.thisMonth = (today.getMonth() + 1).toString().padStart(2, '0');\n    this.thisYear = today.getFullYear().toString().substring(2, 4);\n    console.log(this.thisMonth + '/' + this.thisYear);\n    const formattedDate = formatDate(myDate, format, locale);\n    this.fg = this.fb.group({\n      employeeId: ['0'],\n      monthRequired: this.thisMonth,\n      yearRequired: this.thisYear,\n      dateAdded: formattedDate,\n    });\n  }\n\n  deleteEntry(entryId: string): void {\n    var result = confirm('Sure to delete?');\n    if (result) {\n      this.contService.deleteEntry(entryId).then((arg) => {\n        this.deleted = true;\n      });\n      console.log(entryId);\n    }\n  }\n\n  preEditEntry(entryId: string, productName: string, productId: string, employeeName: string, employeeId: string, definition: string, quantity: number, dateAdded: string): void {\n    this.fEdit = this.fb.group({\n      productId: productId,\n      productName: productName,\n      entryId: entryId,\n      employeeName: employeeName,\n      employeeId: employeeId,\n      definition: definition,\n      quantity: quantity,\n      dateAdded: dateAdded,\n    });\n    this.editEntryForm = true;\n  }\n\n  editEntry(): void {\n    const productId = this.fEdit.get('productId')?.value;\n    const entryId = this.fEdit.get('entryId')?.value;\n    const employeeId = this.fEdit.get('employeeId')?.value;\n    const definition = this.fEdit.get('definition')?.value;\n    const quantity = this.fEdit.get('quantity')?.value;\n    const dateAdded = this.fEdit.get('dateAdded')?.value;\n    this.contService.editEntry(entryId, productId, employeeId, definition, quantity, dateAdded).then((arg) => {\n      this.editSuccess = true;\n    });\n  }\n\n  getProducts(): void {\n    this.products = [];\n    this.contService.getProducts().subscribe((res) => {\n      res.forEach((arg) => {\n        this.products.push({\n          data: arg.payload.doc.data(),\n          docId: arg.payload.doc.id,\n        });\n      });\n    });\n  }\n\n  getEntries(): void {\n    const month = this.fg.get('monthRequired')?.value;\n    const year = this.fg.get('yearRequired')?.value;\n    const employeeId = this.fg.get('employeeId')?.value;\n    this.entries = [];\n    this.finalEnteries = [];\n    this.contService.getEntries().subscribe((arg) => {\n      arg.forEach((res) => {\n        this.finalEnteries.push({\n          data: res.payload.doc.data(),\n          docId: res.payload.doc.id,\n        });\n      });\n      this.createFinalData(month, year, employeeId);\n    });\n  }\n\n  createFinalData(month: string, year: string, employeeId: string): void {\n    this.finalData = [];\n    this.finalEnteries.forEach((arg) => {\n      const monthAdded = arg.data.dateAdded.substring(3, 5);\n      const yearAdded = arg.data.dateAdded.substring(8, 10);\n      this.dateMonthFromDB = monthAdded + '/' + yearAdded;\n      this.dateMonthRequired = month + '/' + year;\n      this.quantity = arg.data.quantity;\n      this.dateAddedFromDB = arg.data.dateAdded;\n\n      if (this.dateMonthFromDB == this.dateMonthRequired) {\n        if (arg.data.employeeId == employeeId) {\n          this.products.forEach((product) => {\n            if (product.docId == arg.data.productId) {\n              this.productName = product.data.productName;\n              this.productId = product.docId;\n            }\n          });\n          this.employees.forEach((emp) => {\n            if (emp.docId == arg.data.employeeId) {\n              this.employeeName = emp.data.employeeName;\n              this.employeeId = emp.docId;\n            }\n          });\n          this.finalData.push({\n            productName: this.productName,\n            employeeName: this.employeeName,\n            quantity: this.quantity,\n            dateAdded: this.dateAddedFromDB,\n            productId: this.productId,\n            employeeId: this.employeeId,\n            docId: arg.docId,\n            definition: arg.data.definition,\n          });\n        }\n      }\n    });\n    this.dataSource = new MatTableDataSource<FinalData>(this.finalData);\n    this.dataSource.sort = this.matSort;\n    this.success = true;\n  }\n\n  getEmployees(): void {\n    this.employees = [];\n    this.contService.getEmployees().subscribe((res) => {\n      res.forEach((arg) => {\n        this.employees.push({\n          data: arg.payload.doc.data(),\n          docId: arg.payload.doc.id,\n        });\n      });\n    });\n  }\n}\n","<div class=\"container\">\n  <div class=\"heading\">Search Entries</div>\n  <form\n    name=\"productForm\"\n    [formGroup]=\"fg\"\n    class=\"form-inline mt-2 mt-md-0\"\n    (ngSubmit)=\"getEntries()\"\n  >\n  <table>\n    <tr>\n      <td>\n        <select formControlName=\"employeeId\" class=\"form-control\"\n        style=\"padding: 3px; margin-left: 10px\"\n        >\n          <option value=\"0\">Select employee</option>\n          <option *ngFor=\"let employee of employees\" value=\"{{ employee.docId }}\">\n            {{ employee.data.employeeName }}\n          </option>\n        </select>\n      </td>\n      <td>\n        <select  class=\"form-control\"\n        style=\"padding: 3px; margin-left: 10px\"\n        formControlName=\"monthRequired\"\n      >\n        <option value=\"01\" >January</option>\n        <option value=\"02\" >February</option>\n        <option value=\"03\" >March</option>\n        <option value=\"04\" >April</option>\n        <option value=\"05\" >May</option>\n        <option value=\"06\" >June</option>\n        <option value=\"07\" >July</option>\n        <option value=\"08\" >August</option>\n        <option value=\"09\" >September</option>\n        <option value=\"10\" >October</option>\n        <option value=\"11\" >November</option>\n        <option value=\"12\" >December</option>\n      </select>\n      </td>\n      <td>\n      <select  class=\"form-control\"\n        style=\"padding: 3px; margin-left: 10px\"\n        formControlName=\"yearRequired\"\n      >\n        <option value=\"20\" >2020</option>\n        <option value=\"21\" >2021</option>\n        <option value=\"22\" >2022</option>\n        <option value=\"23\" >2023</option>\n        <option value=\"24\" >2024</option>\n        <option value=\"25\" >2025</option>\n        <option value=\"26\" >2026</option>\n        <option value=\"27\" >2027</option>\n        <option value=\"28\" >2028</option>\n        <option value=\"29\" >2029</option>\n        <option value=\"30\" >2030</option>\n        <option value=\"31\" >2031</option>\n      </select>\n      </td>\n      <td>\n    <input type=\"submit\" name=\"btn\" value=\"Search\" style=\"padding: 3px; margin-left: 10px; color:whitesmoke; background-color: rgb(10, 18, 88);\" class=\"form-control\"  />\n      </td>\n    </tr>\n  </table>\n  </form>\n</div>\n  <br>\n\n  <div *ngIf=\"editEntryForm\" class=\"container\" style=\"background-color: whitesmoke;\">\n    <form\n      name=\"productForm\"\n      [formGroup]=\"fEdit\"\n      class=\"form-inline mt-2 mt-md-0\"\n      (ngSubmit)=\"editEntry()\"\n    >\n      <table>\n        <tr>\n          <th>Date</th>\n          <th>Product</th>\n          <th>Employee</th>\n          <th>Quantity</th>\n        </tr>\n        <tr>\n          <td>\n            <input\n              type=\"text\"\n              formControlName=\"dateAdded\"\n              style=\"width: 100px; padding: 3px; margin: 3px\"\n              class=\"form-control\"\n            />\n          </td>\n          <td>\n            <select formControlName=\"productId\" class=\"form-control\" style=\"width: 300px;\">\n              <option *ngFor=\"let product of products\" value=\"{{ product.docId }}\">\n                {{ product.data.productName }}\n              </option>\n            </select>\n          </td>\n          <td>\n            <select formControlName=\"employeeId\" class=\"form-control\">\n              <option *ngFor=\"let employee of employees\" value=\"{{ employee.docId }}\">\n                {{ employee.data.employeeName }}\n              </option>\n            </select>\n          </td>\n          <td>\n            <input\n              type=\"text\"\n              formControlName=\"quantity\"\n              style=\"width: 100px; padding: 3px; margin: 3px\"\n              class=\"form-control\"\n            />\n          </td>\n          <td>\n           <input\n              type=\"text\"\n              formControlName=\"definition\"\n              style=\"width: 250px; padding: 3px; margin: 3px\"\n              class=\"form-control\"\n            />\n          </td>\n        </tr>\n        <tr>\n          <td>\n            <tr>\n              <td>\n                <input\n                  type=\"submit\"\n                  name=\"btn\"\n                  value=\"Submit\"\n                  style=\"margin-left: 5px\"\n                  class=\"nice-button\"\n                />\n              </td>\n              <td>\n                <input\n                  type=\"button\"\n                  name=\"btn\"\n                  value=\"Cancel\"\n                  style=\"margin-left: 5px; background-color: red; border:1px solid rgb(77, 5, 5); padding: 3px; color:snow \"\n                  class=\"nice-button\"\n                  (click)=\"editEntryForm = false\"\n                />\n              </td>\n            </tr>\n          </td>\n        </tr>\n      </table>\n    </form>\n  </div>\n  <br>\n<div class=\"container\">\n<div *ngIf=\"success\">\n  <table mat-table matSort class=\"mat-elevation-z8\" [dataSource]=\"dataSource\" style=\"width: 100%;\">\n    <ng-container matColumnDef=\"dateAdded\">\n      <th mat-header-cell *matHeaderCellDef mat-sort-header>Date</th>\n      <td mat-cell *matCellDef=\"let finalData\">{{ finalData.dateAdded }}</td>\n    </ng-container>\n    <ng-container matColumnDef=\"employeeName\">\n      <th mat-header-cell *matHeaderCellDef mat-sort-header>Employee Name</th>\n      <td mat-cell *matCellDef=\"let finalData\">{{ finalData.employeeName }}</td>\n    </ng-container>\n    <ng-container matColumnDef=\"productName\">\n      <th mat-header-cell *matHeaderCellDef mat-sort-header>Product</th>\n      <td mat-cell *matCellDef=\"let finalData\">{{ finalData.productName }}</td>\n    </ng-container>\n\n    <ng-container matColumnDef=\"quantity\">\n      <th mat-header-cell *matHeaderCellDef mat-sort-header>Quantity</th>\n      <td mat-cell *matCellDef=\"let finalData\">{{ finalData.quantity }}</td>\n    </ng-container>\n    <ng-container matColumnDef=\"definition\">\n      <th mat-header-cell *matHeaderCellDef mat-sort-header>Addl. info</th>\n      <td mat-cell *matCellDef=\"let finalData\">{{ finalData.definition }}</td>\n    </ng-container>\n    <ng-container matColumnDef=\"actions\">\n      <th mat-header-cell  *matHeaderCellDef mat-sort-header> Actions </th>\n      <td mat-cell *matCellDef=\"let finalData\" >\n        <button mat-raised-button color=\"accent\" size=\"small\"  (click)=\"\n        preEditEntry(\n          finalData.docId,\n          finalData.productName,\n          finalData.productId,\n          finalData.employeeName,\n          finalData.employeeId,\n          finalData.definition,\n          finalData.quantity,\n          finalData.dateAdded\n        )\n      \">Edit</button>  &nbsp;&nbsp;\n           <button mat-raised-button color=\"warn\" size=\"small\" (click)=\"deleteEntry(finalData.docId)\" >Delete</button>\n        </td>\n    </ng-container>\n    <tr mat-header-row *matHeaderRowDef=\"displayedColumns\"></tr>\n    <tr mat-row *matRowDef=\"let finalData; columns: displayedColumns\"></tr>\n  </table>\n  <div *ngIf=\"deleted\" class=\"notifier\">Entry deleted! </div>\n</div>\n</div>\n","import { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\n\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n"],"names":["of","ApexContractualService","constructor","afs","addEmployee","employeeName","priceCategory","defintion","collection","add","getEmployees","ref","orderBy","snapshotChanges","editEmployee","employeeId","definition","doc","update","deleteEmployee","delete","getEmployee","id","get","editProduct","productId","productName","addNewProduct","size","deleteProduct","getPrices","event","console","log","getPriceByCat","prodId","cat","where","editPrice","priceId","price","price2","deletePrice","addNewPrice","price3","comments","getProducts","getProducts1","getProduct","addNewEntry","quantity","dateAdded","getProductById","getEmployeeById","getEntries","getEntriesGet","editEntry","entryId","getEntriesCalc","getPricesCalc","procuctId","getEmployeePriceCat","getEntry","deleteEntry","GetAssets","assets","assetId","assetName","cpuName","hddName","factory","providedIn","RouterModule","CalculateComponent","EmployeeMasterComponent","EntriesComponent","PriceComponent","ProductMasterComponent","SearchComponent","routes","path","component","AppRoutingModule","forRoot","imports","exports","firebaseConfig","apiKey","authDomain","projectId","storageBucket","messagingSenderId","appId","measurementId","AppComponent","selectors","decls","vars","template","i0","BrowserModule","BrowserAnimationsModule","ManageEntriesComponent","NavComponent","FormsModule","ReactiveFormsModule","MatCardModule","MatTableModule","MatSortModule","AngularFirestore","AngularFirestoreModule","AngularFireModule","environment","AppModule","bootstrap","initializeApp","firebase","declarations","MatSort","contService","fb","ngOnInit","initializeFormGroup","today","Date","format","locale","thisMonth","getMonth","toString","slice","thisYear","getFullYear","fg","group","selectedMonth","selectedYear","consolidated","employees","subscribe","arg","map","res","payload","data","docId","empId","prices","finalPrices","forEach","push","createFinalData","entries","finalEntries","finalData","totalCalc","dateFromDB","value","error","selectedYearMonth","then","arg1","querySnapshot","substring","createArray","createConsolidatedArray","entriesArray","dataSource","viewQuery","ctx","Validators","required","addNewEmployee","employeeNameControl","definitionControl","priceCategoryControl","success","preEditEmployee","oldDef","fEdit","editEmployeeForm","employeeIdControl","editSuccess","result","confirm","deleteSuccess","formatDate","MatTableDataSource","sort","matSort","initializeForm","formatDateComponent","yesterday","getTime","formattedDate","pattern","month","year","finalEnteries","docs","finalDatas","filter","monthAdded","yearAdded","dateMonthFromDB","dateMonthRequired","dateAddedFromDB","date","changeMonth","changeYear","products","loading","disable","addNew","enable","employee","find","product","ngAfterViewInit","production","myDate","now","p","emp","undefined","consts","preEditPrice","oldPrice","oldPrice2","editPriceForm","newPrice","newPrice2","successData","initializeForms","handleSuccess","preEditProduct","setValue","editProductForm","snapshots","snapshot","message","padStart","monthRequired","yearRequired","deleted","preEditEntry","editEntryForm","__NgCli_bootstrap_1","bootstrapModule","catch","err"],"sourceRoot":"webpack:///","x_google_ignoreList":[]}